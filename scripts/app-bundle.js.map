{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/cart/cart-item.js","src/cart/cart.js","src/cart/checkout.js","src/cart/confirm.js","src/components/alert-banner.js","src/components/navigation.js","src/components/product-card.js","src/components/product-list.js","src/events/cart-events.js","src/events/order-events.js","src/home/home.js","src/resources/currency-format.js","src/resources/index.js","src/resources/web-api.js"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","inject","debug","testing","configure","aurelia","use","standardConfiguration","plugin","feature","developmentLogging","start","then","setRoot","CartItem","ea","subtotal","subscribe","recomputeSubtotal","attached","quantity","price","removeFromCart","publish","id","decreaseQuantity","increaseQuantity","Cart","taxes","shipping","total","msg","changeQuantity","activate","recomputeTotals","addToCart","data","items","has","set","cartChanged","delete","get","size","Map","Checkout","cart","validator","api","countries","provinces","ensure","c","firstName","required","lastName","email","phone","street","city","postalCode","on","getCartSize","submit","validate","result","valid","shippingInfo","apartment","country","province","order","placeOrder","results","success","navigateToRoute","orderId","Confirm","params","getOrder","totals","AlertBanner","enabled","message","alertType","flashAlert","setTimeout","Navigation","cartCount","count","ProductCard","description","ProductList","products","created","getProductList","ProductQuantityChanged","ProductRemovedFromCart","ProductAddedToCart","ProductAlreadyInCart","CartUniqueItemsCountChanged","OrderConfirmed","Home","CurrencyFormatValueConverter","toView","value","format","latency","apartmentNum","WebAPI","http","isRequesting","withBaseUrl","withDefaults","headers","Promise","fetch","response","json","x","imgUrl","resolve"],"mappings":";;;;;;;;;;;;;;;;MAEaA,cAAAA;;;;;kBAGXC,2CAAgBC,QAAQC,QAAQ;AAC9B,WAAKA,MAAL,GAAcA,MAAd;AACAD,aAAOE,KAAP,GAAe,YAAf;AACAF,aAAOG,GAAP,CAAW,CACT,EAAEC,OAAO,CAAC,EAAD,EAAK,MAAL,CAAT,EAAuCC,MAAM,MAA7C,EAA2DC,UAAU,WAArE,EADS,EAET,EAAEF,OAAO,MAAT,EAAuCC,MAAM,MAA7C,EAA2DC,UAAU,WAArE,EAFS,EAGT,EAAEF,OAAO,eAAT,EAAuCC,MAAM,UAA7C,EAA2DC,UAAU,eAArE,EAHS,EAIT,EAAEF,OAAO,2BAAT,EAAuCC,MAAM,SAA7C,EAA2DC,UAAU,cAArE,EAJS,CAAX;AAMD;;;cAXMC,SAAS;;;;;;;;oBCHH;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCECC,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmBC,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,MAFH,CAEU,oBAFV,EAGGC,OAHH,CAGW,WAHX;;AAKA,QAAI,sBAAYP,KAAhB,EAAuB;AACrBG,cAAQC,GAAR,CACGI,kBADH,GAEGF,MAFH,CAEU,oBAFV;AAGD;;AAED,QAAI,sBAAYL,OAAhB,EAAyB;AACvBE,cAAQC,GAAR,CAAYE,MAAZ,CAAmB,iBAAnB;AACD;;AAEDH,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCfYC,mBAAAA;AAQX,sBAAYC,EAAZ,EAAe;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACb,WAAKA,EAAL,GAAUA,EAAV;AACA,WAAKC,QAAL,GAAgB,CAAhB;;AAEAD,SAAGE,SAAH,iCAAiC,eAAO;AACtC,cAAKC,iBAAL;AACD,OAFD;AAGD;;uBAEDC,+BAAU;AACR,WAAKD,iBAAL;AACD;;uBAEDA,iDAAmB;AACjB,WAAKF,QAAL,GAAgB,KAAKI,QAAL,GAAgB,KAAKC,KAArC;AACD;;uBAEDC,2CAAgB;AACd,WAAKP,EAAL,CAAQQ,OAAR,CAAgB,uCAA2B,KAAKC,EAAhC,CAAhB;AACA,WAAKN,iBAAL;AACD;;uBAEDO,+CAAkB;AAChB,UAAI,KAAKL,QAAL,GAAgB,CAApB,EAAuB;AACrB,aAAKA,QAAL;AACA,aAAKL,EAAL,CAAQQ,OAAR,CAAgB,uCAA2B,KAAKC,EAAhC,EAAoC,KAAKJ,QAAzC,CAAhB;AACA,aAAKF,iBAAL;AACD;AACF;;uBAEDQ,+CAAkB;AAChB,WAAKN,QAAL;AACA,WAAKL,EAAL,CAAQQ,OAAR,CAAgB,uCAA2B,KAAKC,EAAhC,EAAoC,KAAKJ,QAAzC,CAAhB;AACA,WAAKF,iBAAL;AACD;;;eAzCMjB,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCIL0B,eAAAA;AAKX,kBAAYZ,EAAZ,EAAe;AAAA;;AAAA;;AAAA;;AACb,WAAKA,EAAL,GAAUA,EAAV;AACA,WAAKa,KAAL,GAAa,CAAb;AACA,WAAKC,QAAL,GAAgB,CAAhB;AACA,WAAKC,KAAL,GAAa,CAAb;AACA,WAAKd,QAAL,GAAgB,CAAhB;;AAEAD,SAAGE,SAAH,qCAAqC,eAAO;AAC1C,cAAKK,cAAL,CAAoBS,IAAIP,EAAxB;AACD,OAFD;;AAIAT,SAAGE,SAAH,qCAAqC,eAAO;AAC1C,cAAKe,cAAL,CAAoBD,IAAIP,EAAxB,EAA4BO,IAAIX,QAAhC;AACD,OAFD;AAGD;;mBAIDa,+BAAU;;AAgBR,WAAKC,eAAL;AACD;;mBAIDC,+BAAUX,IAAIY,MAAK;AACjB,UAAI,KAAKC,KAAL,CAAWC,GAAX,CAAed,EAAf,CAAJ,EAAwB;AACtB,aAAKT,EAAL,CAAQQ,OAAR,CAAgB,qCAAyBC,EAAzB,EAA6BY,IAA7B,CAAhB;AACD,OAFD,MAEO;AACL,aAAKC,KAAL,CAAWE,GAAX,CAAef,EAAf,EAAmBY,IAAnB;AACA,aAAKrB,EAAL,CAAQQ,OAAR,CAAgB,mCAAuBC,EAAvB,EAA2BY,IAA3B,CAAhB;AACA,aAAKI,WAAL;AACD;AACF;;mBAEDlB,yCAAeE,IAAG;AAChB,WAAKa,KAAL,CAAWI,MAAX,CAAkBjB,EAAlB;AACA,WAAKgB,WAAL;AACD;;mBAEDR,yCAAeR,IAAIJ,UAAS;AAC1B,UAAIgB,OAAO,KAAKC,KAAL,CAAWK,GAAX,CAAelB,EAAf,CAAX;AACAY,WAAKhB,QAAL,GAAgBA,QAAhB;AACA,WAAKiB,KAAL,CAAWE,GAAX,CAAef,EAAf,EAAmBY,IAAnB;AACA,WAAKI,WAAL;AACD;;mBAEDA,qCAAa;AACX,WAAKzB,EAAL,CAAQQ,OAAR,CAAgB,4CAAgC,KAAKc,KAAL,CAAWM,IAA3C,CAAhB;AACA,WAAKT,eAAL;AACD;;mBAEDA,6CAAiB;AACf,UAAIlB,WAAW,CAAf;AACA,2BAAuB,KAAKqB,KAA5B,kHAAmC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,YAAzBb,EAAyB;AAAA,YAArBY,IAAqB;;AACjCpB,mBAAWA,WAAYoB,KAAKf,KAAL,GAAae,KAAKhB,QAAzC;AACD;AACD,WAAKJ,QAAL,GAAgBA,QAAhB;AACA,WAAKY,KAAL,GAAa,KAAKZ,QAAL,GAAgB,IAA7B;AACA,WAAKc,KAAL,GAAa,KAAKd,QAAL,GAAgB,KAAKY,KAAlC;AACD;;;eA9EM3B,SAAS;;;aAEI,IAAI2C,GAAJ;;;;;;;;;;;;;;;;;;;;MCPTC,mBAAAA;AA+BX,sBAAYC,IAAZ,EAAkBC,SAAlB,EAA6BpD,MAA7B,EAAqCqD,GAArC,EAAyC;AAAA;;AAAA,WAjBzCC,SAiByC,GAjB7B,CAAC,QAAD,CAiB6B;AAAA,WAhBzCC,SAgByC,GAhB7B,CACV,SADU,EAEV,kBAFU,EAGV,UAHU,EAIV,eAJU,EAKV,2BALU,EAMV,uBANU,EAOV,aAPU,EAQV,SARU,EASV,SATU,EAUV,sBAVU,EAWV,QAXU,EAYV,cAZU,EAaV,OAbU,CAgB6B;;AACvC,WAAKJ,IAAL,GAAYA,IAAZ;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACA,WAAKpD,MAAL,GAAcA,MAAd;AACA,WAAKqD,GAAL,GAAWA,GAAX;;AAEA,yCACGG,MADH,CACU,UAACC,CAAD;AAAA,eAAiBA,EAAEC,SAAnB;AAAA,OADV,EACwCC,QADxC,GAEGH,MAFH,CAEU,UAACC,CAAD;AAAA,eAAiBA,EAAEG,QAAnB;AAAA,OAFV,EAEuCD,QAFvC,GAGGH,MAHH,CAGU,UAACC,CAAD;AAAA,eAAiBA,EAAEI,KAAnB;AAAA,OAHV,EAGoCF,QAHpC,GAG+CE,KAH/C,GAIGL,MAJH,CAIU,UAACC,CAAD;AAAA,eAAiBA,EAAEK,KAAnB;AAAA,OAJV,EAIoCH,QAJpC,GAKGH,MALH,CAKU,UAACC,CAAD;AAAA,eAAiBA,EAAEM,MAAnB;AAAA,OALV,EAKqCJ,QALrC,GAMGH,MANH,CAMU,UAACC,CAAD;AAAA,eAAiBA,EAAEO,IAAnB;AAAA,OANV,EAMmCL,QANnC,GAOGH,MAPH,CAOU,UAACC,CAAD;AAAA,eAAiBA,EAAEQ,UAAnB;AAAA,OAPV,EAOyCN,QAPzC,GAQGO,EARH,CAQM,IARN;AASD;;uBAEDC,qCAAa;AACX,aAAO,KAAKhB,IAAL,CAAUT,KAAV,CAAgBM,IAAvB;AACD;;uBAEDoB,2BAAS;AAAA;;AACP,WAAKhB,SAAL,CAAeiB,QAAf,GAA0BpD,IAA1B,CAA+B,kBAAU;AACvC,YAAIqD,OAAOC,KAAX,EAAkB;AAChB,cAAIC,eAAe;AACjBd,uBAAW,MAAKA,SADC;AAEjBE,sBAAU,MAAKA,QAFE;AAGjBC,mBAAO,MAAKA,KAHK;AAIjBC,mBAAO,MAAKA,KAJK;AAKjBC,oBAAQ,MAAKA,MALI;AAMjBU,uBAAW,MAAKA,SANC;AAOjBC,qBAAS,MAAKA,OAPG;AAQjBC,sBAAU,MAAKA,QARE;AASjBX,kBAAM,MAAKA,IATM;AAUjBC,wBAAY,MAAKA;AAVA,WAAnB;;AAaA,cAAIW,QAAQ;AACVJ,0BAAcA,YADJ;AAEV9B,mBAAO,MAAKS,IAAL,CAAUT;AAFP,WAAZ;;AAKA,gBAAKW,GAAL,CAASwB,UAAT,CAAoBD,KAApB,EAA2B3D,IAA3B,CAAgC,mBAAW;AACzC,gBAAI6D,QAAQC,OAAR,IAAmB,IAAvB,EAA6B;AAC3B,oBAAK/E,MAAL,CAAYgF,eAAZ,CAA4B,SAA5B,EAAuC,EAAEnD,IAAIiD,QAAQG,OAAd,EAAvC;AAED;AACF,WALD;AAMD;AACF,OA3BD;AA4BD;;;cAhFM3E,SAAS;;;;;;;;;;;;;;;;;;MCJL4E,kBAAAA;AAGX,qBAAY7B,GAAZ,EAAiB;AAAA;;AACf,WAAKA,GAAL,GAAWA,GAAX;AACD;;sBAIDf,6BAAS6C,QAAQ;AAAA;;AACf,WAAKtD,EAAL,GAAUsD,OAAOtD,EAAjB;AACA,WAAKwB,GAAL,CAAS+B,QAAT,CAAkBD,OAAOtD,EAAzB,EAA6BZ,IAA7B,CAAkC,mBAAW;AACzC,cAAK4C,KAAL,GAAaiB,QAAQjB,KAArB;AACA,cAAKW,YAAL,GAAoBM,QAAQN,YAA5B;AACA,cAAK9B,KAAL,GAAaoC,QAAQpC,KAArB;AACA,cAAK2C,MAAL,GAAcP,QAAQO,MAAtB;AACH,OALD;AAMD;;;cAhBM/E,SAAS;;;;;;;;;;;;;;;;;;MCCLgF,sBAAAA;AAIX,yBAAYlE,EAAZ,EAAgB;AAAA;;AAAA;;AACd,WAAKmE,OAAL,GAAe,KAAf;AACA,WAAKC,OAAL,GAAe,EAAf;AACA,WAAKC,SAAL,GAAiB,EAAjB;AACA,WAAKrE,EAAL,GAAUA,EAAV;;AAEAA,SAAGE,SAAH,iCAAiC,eAAO;AACtC,cAAKkE,OAAL,GAAepD,IAAIK,IAAJ,CAASrC,IAAT,GAAgB,0BAA/B;AACA,cAAKsF,UAAL,CAAgB,kBAAhB;AACD,OAHD;;AAKAtE,SAAGE,SAAH,mCAAmC,eAAO;AACxC,cAAKkE,OAAL,GAAepD,IAAIK,IAAJ,CAASrC,IAAT,GAAgB,2BAA/B;AACA,cAAKsF,UAAL,CAAgB,kBAAhB;AACD,OAHD;AAID;;0BAEDA,iCAAWD,WAAU;AAAA;;AACnB,WAAKF,OAAL,GAAe,IAAf;AACA,WAAKE,SAAL,GAAiBA,SAAjB;AACAE,iBAAW,YAAM;AAAE,eAAKJ,OAAL,GAAe,KAAf;AAAuB,OAA1C,EAA4C,IAA5C;AACD;;;cAvBMjF,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCFLsF,qBAAAA,0CAKX,oBAAYxE,EAAZ,EAAgB;AAAA;;AAAA;;AAAA;;AACd,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKyE,SAAL,GAAiB,CAAjB;;AAEAzE,OAAGE,SAAH,0CAA0C,eAAO;AAC/C,YAAKuE,SAAL,GAAiBzD,IAAI0D,KAArB;AACD,KAFD;AAGD,aAXMxF,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCFLyF,sBAAAA;AAGX,yBAAY5C,IAAZ,EAAiB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,WAQjB1B,QARiB,GAQN,CARM;;AACf,WAAK0B,IAAL,GAAYA,IAAZ;AACD;;0BAQDX,iCAAW;AACT,UAAIC,OAAO;AACTrC,cAAM,KAAKA,IADF;AAET4F,qBAAa,KAAKA,WAFT;AAGTvE,kBAAU,KAAKA,QAHN;AAITC,eAAO,KAAKA;AAJH,OAAX;AAMA,WAAKyB,IAAL,CAAUX,SAAV,CAAoB,KAAKX,EAAzB,EAA6BY,IAA7B;AACD;;0BAEDV,+CAAkB;AAChB,WAAKN,QAAL;AACD;;0BAEDK,+CAAkB;AAChB,UAAI,KAAKL,QAAL,GAAgB,CAApB,EAAuB;AACrB,aAAKA,QAAL;AACD;AACF;;;eA9BMnB,SAAS;;;aAMD;;;;;aACE;;;;;aACO;;;;;;;;;;;;;;;;;;;;;;;MCVb2F,sBAAAA;AAGX,yBAAY5C,GAAZ,EAAgB;AAAA;;AACd,WAAKA,GAAL,GAAWA,GAAX;AACA,WAAK6C,QAAL,GAAgB,EAAhB;AACD;;0BAEDC,6BAAS;AAAA;;AACP,WAAK9C,GAAL,CAAS+C,cAAT,GAA0BnF,IAA1B,CAA+B;AAAA,eAAY,MAAKiF,QAAL,GAAgBA,QAA5B;AAAA,OAA/B;AACD;;;cATM5F,SAAS;;;;;;;;;;;;;;;MCHL+F,iCAAAA,yBACX,gCAAYxE,EAAZ,EAAgBJ,QAAhB,EAA0B;AAAA;;AACxB,SAAKI,EAAL,GAAUA,EAAV;AACA,SAAKJ,QAAL,GAAgBA,QAAhB;AACD;;MAGU6E,iCAAAA,yBACX,gCAAYzE,EAAZ,EAAgB;AAAA;;AACd,SAAKA,EAAL,GAAUA,EAAV;AACD;;MAGU0E,6BAAAA,qBACX,4BAAY1E,EAAZ,EAAgBY,IAAhB,EAAsB;AAAA;;AACpB,SAAKZ,EAAL,GAAUA,EAAV;AACA,SAAKY,IAAL,GAAYA,IAAZ;AACD;;MAGU+D,+BAAAA,uBACX,8BAAY3E,EAAZ,EAAgBY,IAAhB,EAAsB;AAAA;;AACpB,SAAKZ,EAAL,GAAUA,EAAV;AACA,SAAKY,IAAL,GAAYA,IAAZ;AACD;;MAGUgE,sCAAAA,8BACX,qCAAYX,KAAZ,EAAmB;AAAA;;AACjB,SAAKA,KAAL,GAAaA,KAAb;AACD;;;;;;;;;;;;;;;MC7BUY,yBAAAA,iBACX,wBAAY7E,EAAZ,EAAgB2C,YAAhB,EAA8B9B,KAA9B,EAAqC;AAAA;;AACnC,SAAKb,EAAL,GAAUA,EAAV;AACA,SAAK2C,YAAL;AACA,SAAK9B,KAAL;AACD;;;;;;;;;;;;;;;MCNUiE,eAAAA;;;SACXnB,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;MCCCoB,uCAAAA;;;;;2CACXC,yBAAOC,OAAO;AACZ,aAAO,uBAAQA,KAAR,EAAeC,MAAf,CAAsB,WAAtB,CAAP;AACD;;;;;;;;;;;UCLatG,YAAAA;AAAT,WAASA,SAAT,CAAmBV,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;ACFD,MAAIiH,UAAU,GAAd;;AAEA,MAAIxC,eAAe;AACjBd,eAAW,KADM;AAEjBE,cAAU,OAFO;AAGjBG,YAAQ,uBAHS;AAIjBkD,kBAAc,KAJG;AAKjBjD,UAAM,SALW;AAMjBW,cAAU,SANO;AAOjBV,gBAAY;AAPK,GAAnB;;AAUA,MAAIvB,QAAQ,CACV;AACEb,QAAI,GADN;AAEEzB,UAAM,sBAFR;AAGEsB,WAAO,KAHT;AAIED,cAAU,CAJZ;AAKEJ,cAAU;AALZ,GADU,EAQV;AACEQ,QAAI,GADN;AAEEzB,UAAM,qBAFR;AAGEsB,WAAO,KAHT;AAIED,cAAU,CAJZ;AAKEJ,cAAU;AALZ,GARU,CAAZ;;AAiBA,MAAIgE,SAAS;AACXhE,cAAU,KADC;AAEXY,WAAO,KAFI;AAGXE,WAAO;AAHI,GAAb;;MAQa+E,iBAAAA;AAKX,oBAAYC,IAAZ,EAAkB;AAAA;;AAAA,WAFlBC,YAEkB,GAFH,KAEG;;AAChBD,WAAK1G,SAAL,CAAe,kBAAU;AACvBV,eACGsH,WADH,CACe,wBADf,EAEGC,YAFH,CAEgB;AACZC,mBAAS;AACP,sBAAU;AADH;AADG,SAFhB;AAOD,OARD;;AAUA,WAAKJ,IAAL,GAAYA,IAAZ;AACD;;qBAEDf,2CAAiB;AAAA;;AACf,WAAKgB,YAAL,GAAoB,IAApB;AACA,aAAO,IAAII,OAAJ,CAAY,mBAAW;AAC5B7B,mBAAW,YAAM;AACf,cAAIb,UAAU,MAAKqC,IAAL,CAAUM,KAAV,CAAgB,cAAhB,EACXxG,IADW,CACN;AAAA,mBAAYyG,SAASC,IAAT,EAAZ;AAAA,WADM,EAEX1G,IAFW,CAEN,gBAAQ;AACZ,mBAAOwB,KAAKvC,GAAL,CAAS,aAAK;AAAE,qBAAO;AAC5B2B,oBAAG+F,EAAE/F,EADuB;AAE5BzB,sBAAKwH,EAAExH,IAFqB;AAG5B4F,6BAAY4B,EAAE5B,WAHc;AAI5B6B,wBAAOD,EAAEC,MAJmB;AAK5BnG,uBAAMkG,EAAElG;AALoB,eAAP;AAMrB,aANK,CAAP;AAOD,WAVW,CAAd;AAWAoG,kBAAQhD,OAAR;AACA,gBAAKsC,YAAL,GAAoB,KAApB;AACD,SAdD,EAcGJ,OAdH;AAeD,OAhBM,CAAP;AAiBD;;qBAEDnC,iCAAWpC,MAAM;AAAA;;AACf,WAAK2E,YAAL,GAAoB,IAApB;AACA,aAAO,IAAII,OAAJ,CAAY,mBAAW;AAC5B7B,mBAAW,YAAM;AACf,cAAIb,UAAU;AACZG,qBAAS,gBADG;AAEZF,qBAAS;AAFG,WAAd;AAIA+C,kBAAQhD,OAAR;AACA,iBAAKsC,YAAL,GAAoB,KAApB;AACD,SAPD,EAOGJ,OAPH;AAQD,OATM,CAAP;AAUD;;qBAED5B,6BAASvD,IAAI;AAAA;;AACX,WAAKuF,YAAL,GAAoB,IAApB;AACA,aAAO,IAAII,OAAJ,CAAY,mBAAW;AAC5B7B,mBAAW,YAAM;AACf,cAAIb,UAAU;AACZN,0BAAcA,YADF;AAEZ9B,mBAAOA,KAFK;AAGZ2C,oBAAQA,MAHI;AAIZxB,mBAAO;AAJK,WAAd;AAMAiE,kBAAQhD,OAAR;AACA,iBAAKsC,YAAL,GAAoB,KAApB;AACD,SATD,EASGJ,OATH;AAUD,OAXM,CAAP;AAYD;;;cAnEM1G,SAAS","file":"app-bundle.js","sourcesContent":["import {RouterConfiguration, Router} from 'aurelia-router';\n\nexport class App {\n  static inject = [RouterConfiguration, Router];\n\n  configureRouter(config, router) {\n    this.router = router;\n    config.title = 'ReCommerce';\n    config.map([\n      { route: ['', 'home'],                 name: 'home',       moduleId: 'home/home' },\n      { route: 'cart',                       name: 'cart',       moduleId: 'cart/cart' },\n      { route: 'cart/checkout',              name: 'checkout',   moduleId: 'cart/checkout' },\n      { route: 'cart/checkout/confirm/:id',  name: 'confirm',    moduleId: 'cart/confirm' }\n    ]);    \n  }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-validation')\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use\n      .developmentLogging()\n      .plugin('aurelia-validation');\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {bindable} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ProductRemovedFromCart, ProductAddedToCart, ProductQuantityChanged} from '../events/cart-events';\n\nexport class CartItem {  \n  static inject = [EventAggregator];\n\n  @bindable id;\n  @bindable name;\n  @bindable quantity;\n  @bindable price;\n\n  constructor(ea){\n    this.ea = ea;\n    this.subtotal = 0;\n\n    ea.subscribe(ProductAddedToCart, msg => {            \n      this.recomputeSubtotal();\n    });\n  }  \n\n  attached(){\n    this.recomputeSubtotal();\n  }\n\n  recomputeSubtotal(){\n    this.subtotal = this.quantity * this.price;\n  }\n\n  removeFromCart(){\n    this.ea.publish(new ProductRemovedFromCart(this.id));      \n    this.recomputeSubtotal();\n  }\n\n  decreaseQuantity(){\n    if (this.quantity > 1) {\n      this.quantity--;\n      this.ea.publish(new ProductQuantityChanged(this.id, this.quantity));\n      this.recomputeSubtotal();\n    }\n  }\n\n  increaseQuantity(){\n    this.quantity++;\n    this.ea.publish(new ProductQuantityChanged(this.id, this.quantity));\n    this.recomputeSubtotal();\n  }\n}","import { bindable, observable } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport {\n  ProductAddedToCart, \n  ProductAlreadyInCart, \n  ProductRemovedFromCart, \n  ProductQuantityChanged, \n  CartUniqueItemsCountChanged } from '../events/cart-events';\n\nexport class Cart {  \n  static inject = [EventAggregator];\n\n  @observable items = new Map();\n  \n  constructor(ea){\n    this.ea = ea;\n    this.taxes = 0;\n    this.shipping = 0;\n    this.total = 0;\n    this.subtotal = 0;\n\n    ea.subscribe(ProductRemovedFromCart, msg => {\n      this.removeFromCart(msg.id);\n    });\n\n    ea.subscribe(ProductQuantityChanged, msg => {\n      this.changeQuantity(msg.id, msg.quantity);\n    });    \n  }\n\n  // pipeline\n  //--------------------------------------------------------\n  activate(){\n    \n    /*if (!window.localStorage.getItem('cart_items')) {\n      let items = new Map();\n      window.localStorage.setItem('cart_items', items);\n      this.items = items;\n    } else {\n      let obj = window.localStorage.getItem('cart_items');\n      let items = new Map();\n      Object.keys(obj).forEach(key => {\n          items.set(key, obj[key]);\n          items.set(key, obj[key]);\n      });\n      this.items = items;\n    }*/\n\n    this.recomputeTotals();\n  }\n\n  // actions\n  //--------------------------------------------------------\n  addToCart(id, data){\n    if (this.items.has(id)) {\n      this.ea.publish(new ProductAlreadyInCart(id, data));\n    } else {\n      this.items.set(id, data);\n      this.ea.publish(new ProductAddedToCart(id, data));\n      this.cartChanged();\n    }    \n  }\n\n  removeFromCart(id){\n    this.items.delete(id);\n    this.cartChanged();\n  }\n\n  changeQuantity(id, quantity){\n    let data = this.items.get(id);\n    data.quantity = quantity;\n    this.items.set(id, data);\n    this.cartChanged();\n  }\n\n  cartChanged(){\n    this.ea.publish(new CartUniqueItemsCountChanged(this.items.size));\n    this.recomputeTotals();\n  }\n\n  recomputeTotals(){\n    let subtotal = 0;\n    for (var [id, data] of this.items) {\n      subtotal = subtotal + (data.price * data.quantity);\n    }\n    this.subtotal = subtotal;\n    this.taxes = this.subtotal * 0.13;\n    this.total = this.subtotal + this.taxes;\n  }\n}\n","import {Cart} from './cart';\nimport {ValidationRules, ValidationController} from 'aurelia-validation';\nimport {Router} from 'aurelia-router';\nimport {WebAPI} from '../resources/web-api';\n\nexport class Checkout {  \n  static inject = [Cart, ValidationController, Router, WebAPI];  \n\n  firstName;\n  lastName;\n  email;\n  phone;\n  street;\n  apartment;\n  country;\n  province;\n  city;\n  postalCode;\n\n  countries = ['Canada'];\n  provinces = [\n    'Alberta',\n    'British Columbia',\n    'Manitoba',\n    'New Brunswick',\n    'Newfoundland and Labrador',\n    'Northwest Territories',\n    'Nova Scotia',\n    'Nunavut',\n    'Ontario',\n    'Prince Edward Island',\n    'Quebec',\n    'Saskatchewan',\n    'Yukon'\n  ];\n\n  constructor(cart, validator, router, api){\n    this.cart = cart;\n    this.validator = validator;\n    this.router = router;\n    this.api = api;\n\n    ValidationRules\n      .ensure((c: Checkout) => c.firstName).required()\n      .ensure((c: Checkout) => c.lastName).required()\n      .ensure((c: Checkout) => c.email).required().email()\n      .ensure((c: Checkout) => c.phone).required()\n      .ensure((c: Checkout) => c.street).required()\n      .ensure((c: Checkout) => c.city).required()      \n      .ensure((c: Checkout) => c.postalCode).required()\n      .on(this);\n  }\n\n  getCartSize(){\n    return this.cart.items.size;\n  }\n\n  submit() {\n    this.validator.validate().then(result => {\n      if (result.valid) {        \n        let shippingInfo = {\n          firstName: this.firstName,\n          lastName: this.lastName,\n          email: this.email,\n          phone: this.phone,\n          street: this.street,\n          apartment: this.apartment,\n          country: this.country,\n          province: this.province,\n          city: this.city,\n          postalCode: this.postalCode\n        };        \n\n        let order = { \n          shippingInfo: shippingInfo, \n          items: this.cart.items\n        };\n\n        this.api.placeOrder(order).then(results => {\n          if (results.success == true) {\n            this.router.navigateToRoute(\"confirm\", { id: results.orderId });\n            // TODO clear shopping cart  \n          }\n        });                \n      }\n    });\n  }\n}\n","import {WebAPI} from '../resources/web-api';\n\nexport class Confirm {   \n  static inject = [WebAPI];   \n\n  constructor(api) {\n    this.api = api;\n  }\n\n  // Implement this hook if you want to perform custom logic just before your view-model is displayed. \n  // You can optionally return a promise to tell the router to wait to bind and attach the view until after you finish your work.\n  activate(params) {\n    this.id = params.id;\n    this.api.getOrder(params.id).then(results => {      \n        this.email = results.email;\n        this.shippingInfo = results.shippingInfo;\n        this.items = results.items;\n        this.totals = results.totals;      \n    });    \n  }\n}\n","import {bindable} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ProductAddedToCart, ProductAlreadyInCart} from '../events/cart-events';\n\nexport class AlertBanner { \n\n  static inject = [EventAggregator];\n\n  constructor(ea) {\n    this.enabled = false;\n    this.message = \"\";\n    this.alertType = \"\";    \n    this.ea = ea;\n\n    ea.subscribe(ProductAddedToCart, msg => {\n      this.message = msg.data.name + \" was added to your cart.\";\n      this.flashAlert(\"uk-alert-success\");\n    });\n\n    ea.subscribe(ProductAlreadyInCart, msg => {\n      this.message = msg.data.name + \" is already in your cart.\";\n      this.flashAlert(\"uk-alert-warning\");\n    });\n  }\n\n  flashAlert(alertType){\n    this.enabled = true;\n    this.alertType = alertType;\n    setTimeout(() => { this.enabled = false; }, 2000);\n  }\n}","import {bindable} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {CartUniqueItemsCountChanged} from '../events/cart-events';\n\nexport class Navigation {\n  static inject = [EventAggregator];\n\n  @bindable router;\n\n  constructor(ea) {\n    this.ea = ea;\n    this.cartCount = 0;\n\n    ea.subscribe(CartUniqueItemsCountChanged, msg => {\n      this.cartCount = msg.count;\n    });\n  }\n}","import {bindable} from 'aurelia-framework';\nimport {Cart} from '../cart/cart';\n\nexport class ProductCard { \n  static inject = [Cart];  \n\n  constructor(cart){\n    this.cart = cart;\n  }\n\n  @bindable id = \"\";\n  @bindable name = \"\";\n  @bindable description = \"\"; \n  @bindable price;   \n  quantity = 1;\n    \n  addToCart(){\n    let data = {      \n      name: this.name,\n      description: this.description,\n      quantity: this.quantity,\n      price: this.price\n    };\n    this.cart.addToCart(this.id, data);\n  }\n\n  increaseQuantity(){\n    this.quantity++;\n  }\n\n  decreaseQuantity(){\n    if (this.quantity > 1) {\n      this.quantity--;\n    }\n  }  \n}","import {WebAPI} from '../resources/web-api';\n\nexport class ProductList {\n  static inject = [WebAPI];\n\n  constructor(api){\n    this.api = api;\n    this.products = [];\n  }\n\n  created(){\n    this.api.getProductList().then(products => this.products = products);\n  }\n}","export class ProductQuantityChanged {\n  constructor(id, quantity) {\n    this.id = id;\n    this.quantity = quantity;\n  }\n}\n\nexport class ProductRemovedFromCart {\n  constructor(id) {\n    this.id = id;\n  }\n}\n\nexport class ProductAddedToCart {\n  constructor(id, data) {\n    this.id = id;\n    this.data = data;\n  }\n}\n\nexport class ProductAlreadyInCart {\n  constructor(id, data) {\n    this.id = id;\n    this.data = data;\n  }\n}\n\nexport class CartUniqueItemsCountChanged {\n  constructor(count) {\n    this.count = count;\n  }\n}","// order events\nexport class OrderConfirmed {\n  constructor(id, shippingInfo, items) {\n    this.id = id;\n    this.shippingInfo;\n    this.items;\n  }\n}","export class Home {\n  message = 'Products';\n}","import numeral from 'numeral';\n\nexport class CurrencyFormatValueConverter {\n  toView(value) {\n    return numeral(value).format('($0,0.00)');\n  }\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","let latency = 200;\n\nlet shippingInfo = {\n  firstName: \"Joe\",\n  lastName: \"Smith\",\n  street: \"250 University Avenue\",\n  apartmentNum: \"227\",\n  city: \"Toronto\",\n  province: \"Ontario\",\n  postalCode: \"M5A0E3\"\n};\n\nlet items = [\n  {\n    id: \"1\",\n    name: 'Radical Coffee Maker',\n    price: 42.50,\n    quantity: 1,\n    subtotal: 42.50\n  },\n  {\n    id: \"2\",\n    name: 'The Worst Shit Ever',\n    price: 12.99,\n    quantity: 3,\n    subtotal: 38.97\n  },\n];\n\nlet totals = {\n  subtotal: 81.48,\n  taxes: 10.59,\n  total: 92.07\n}\n\nimport { HttpClient } from 'aurelia-fetch-client';\n\nexport class WebAPI {\n  static inject = [HttpClient];\n\n  isRequesting = false;\n\n  constructor(http) {\n    http.configure(config => {\n      config\n        .withBaseUrl('http://localhost:9001/')\n        .withDefaults({\n          headers: {\n            'Accept': 'application/json'\n          }\n        });\n    });\n\n    this.http = http;\n  }\n\n  getProductList() {\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = this.http.fetch('api/products')\n          .then(response => response.json())\n          .then(data => {\n            return data.map(x => { return {\n              id:x.id,\n              name:x.name,\n              description:x.description,\n              imgUrl:x.imgUrl,\n              price:x.price\n            }});\n          });\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  placeOrder(data) {\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = {\n          orderId: \"KJHDNSF7SDAF87\",\n          success: true\n        };\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getOrder(id) {\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = {\n          shippingInfo: shippingInfo,\n          items: items,\n          totals: totals,\n          email: \"joe@smith.com\"\n        };\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n}"],"sourceRoot":".."}