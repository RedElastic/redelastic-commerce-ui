{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/messages.js","src/product-card.js","src/product-list.js","src/shopping-cart.js","src/web-api.js","src/resources/index.js","src/alert-banner.js"],"names":["App","ea","message","subscribe","cartCount","msg","quantity","inject","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","ShoppingCartQuantityUpdated","ProductAddedToCart","id","ProductAlreadyInCart","ProductCard","cart","addToCart","increaseQuantity","decreaseQuantity","ProductList","api","products","created","getProductList","ShoppingCart","Map","has","publish","set","size","latency","getId","name","description","imgUrl","WebAPI","isRequesting","Promise","setTimeout","results","map","x","resolve","getProductDetails","found","contacts","filter","JSON","parse","stringify","config","AlertBanner","enabled","alertType","flashAlert"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {EventAggregator} from 'aurelia-event-aggregator';\nimport {ShoppingCartQuantityUpdated} from './messages';\nimport {bindable} from 'aurelia-framework';\n\nexport class App {\n  static inject = [EventAggregator];\n\n  constructor(ea) {\n    this.ea = ea;\n    this.message = 'Products';\n\n    ea.subscribe(ShoppingCartQuantityUpdated, msg => {\n      this.cartCount = msg.quantity;\n    });\n  }\n\n  @bindable cartCount = 0;\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class ShoppingCartQuantityUpdated {\n  constructor(quantity) {\n    this.quantity = quantity;\n  }\n}\n\nexport class ProductAddedToCart {\n  constructor(id, quantity) {\n    this.id = id;\n    this.quantity = quantity;\n  }\n}\n\nexport class ProductAlreadyInCart {\n  constructor(id) {\n    this.id = id;\n  }\n}","import {bindable} from 'aurelia-framework';\nimport {ShoppingCart} from './shopping-cart';\n\nexport class ProductCard { \n  static inject = [ShoppingCart];  \n\n  constructor(cart){\n    this.cart = cart;\n  }\n\n  @bindable id = \"\";\n  @bindable name = \"\";\n  @bindable description = \"\";    \n  quantity = 1;\n    \n  addToCart(){\n    this.cart.addToCart(this.id, this.quantity);\n  }\n\n  increaseQuantity(){\n      this.quantity++;\n  }\n\n  decreaseQuantity(){\n      if (this.quantity > 1) {\n        this.quantity--;\n      }\n  }\n}","import {WebAPI} from './web-api';\n\nexport class ProductList {\n  static inject = [WebAPI];\n\n  constructor(api){\n    this.api = api;\n    this.products = [];\n  }\n\n  created(){\n    this.api.getProductList().then(products => this.products = products);\n  }\n}","import {bindable} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ShoppingCartQuantityUpdated, ProductAddedToCart, ProductAlreadyInCart} from './messages';\n\nexport class ShoppingCart {  \n  static inject = [EventAggregator];\n  \n  products = new Map();\n\n  constructor(ea){\n    this.ea = ea;\n  }\n\n  addToCart(id, quantity){\n    if (this.products.has(id)) {\n      this.ea.publish(new ProductAlreadyInCart(id));\n    } else {\n      this.products.set(id, quantity);\n      this.ea.publish(new ShoppingCartQuantityUpdated(this.products.size));\n      this.ea.publish(new ProductAddedToCart(id, quantity));\n    }\n  }\n}","let latency = 200;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet products = [\n  {\n    id:getId(),\n    name:'Radical Coffee Maker',\n    description:'The best coffee maker your ass will ever own',\n    imgUrl:''\n  },\n  {\n    id:getId(),\n    name:'The Worst Shit Ever',\n    description:'The worst coffee maker your ass will ever own',\n    imgUrl:''\n  },\n  {\n    id:getId(),\n    name:'Some Gnarly Product',\n    description:'You dont want to use this thing or buy it or nothing',\n    imgUrl:''\n  },\n  {\n    id:getId(),\n    name:'Stupid Coffee Maker',\n    description:'Tries to make tea, doesn\\'t understand its place in the world',\n    imgUrl:''\n  },\n  {\n    id:getId(),\n    name:'Tub of Butter',\n    description:'I don\\'t think you\\'re ready for this jelly',\n    imgUrl:''\n  }\n];\n\nexport class WebAPI {\n  isRequesting = false;\n  \n  getProductList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = products.map(x =>  { return {\n          id:x.id,\n          name:x.name,\n          description:x.description,\n          imgUrl:x.imgUrl\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getProductDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = contacts.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {bindable} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ProductAddedToCart, ProductAlreadyInCart} from './messages';\n\nexport class AlertBanner { \n\n  static inject = [EventAggregator];\n\n  constructor(ea) {\n    this.enabled = false;\n    this.message = \"\";\n    this.alertType = \"\";    \n    this.ea = ea;\n\n    ea.subscribe(ProductAddedToCart, msg => {\n      this.message = \"Product ID \" + msg.id + \" was added to your cart.\";\n      this.flashAlert(\"uk-alert-success\");\n    });\n\n    ea.subscribe(ProductAlreadyInCart, msg => {\n      this.message = \"Product ID \" + msg.id + \" is already in your cart.\";\n      this.flashAlert(\"uk-alert-warning\");\n    });\n  }\n\n  flashAlert(alertType){\n    this.enabled = true;\n    this.alertType = alertType;\n    setTimeout(() => { this.enabled = false; }, 2000);\n  }\n}"],"sourceRoot":".."}